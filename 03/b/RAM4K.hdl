// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=true, sel=address[9..11], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    RAM512Sel(in=in, sel=a, load=load, address=address[0..8], out=aOut);
    RAM512Sel(in=in, sel=b, load=load, address=address[0..8], out=bOut);
    RAM512Sel(in=in, sel=c, load=load, address=address[0..8], out=cOut);
    RAM512Sel(in=in, sel=d, load=load, address=address[0..8], out=dOut);
    RAM512Sel(in=in, sel=e, load=load, address=address[0..8], out=eOut);
    RAM512Sel(in=in, sel=f, load=load, address=address[0..8], out=fOut);
    RAM512Sel(in=in, sel=g, load=load, address=address[0..8], out=gOut);
    RAM512Sel(in=in, sel=h, load=load, address=address[0..8], out=hOut);

    Mux8Way16(a=aOut, b=bOut, c=cOut, d=dOut, e=eOut, f=fOut, g=gOut, h=hOut, sel=address[9..11], out=out);
}