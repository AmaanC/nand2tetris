// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=true, sel=address[6..8], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    RAM64Sel(in=in, sel=a, load=load, address=address[0..5], out=aOut);
    RAM64Sel(in=in, sel=b, load=load, address=address[0..5], out=bOut);
    RAM64Sel(in=in, sel=c, load=load, address=address[0..5], out=cOut);
    RAM64Sel(in=in, sel=d, load=load, address=address[0..5], out=dOut);
    RAM64Sel(in=in, sel=e, load=load, address=address[0..5], out=eOut);
    RAM64Sel(in=in, sel=f, load=load, address=address[0..5], out=fOut);
    RAM64Sel(in=in, sel=g, load=load, address=address[0..5], out=gOut);
    RAM64Sel(in=in, sel=h, load=load, address=address[0..5], out=hOut);

    Mux8Way16(a=aOut, b=bOut, c=cOut, d=dOut, e=eOut, f=fOut, g=gOut, h=hOut, sel=address[6..8], out=out);
}